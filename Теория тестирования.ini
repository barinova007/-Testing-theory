
ОБЩИЕ ВОПРОСЫ О ТЕСТИРОВАНИИ: 

Что такое тестирование? 
Это техника контроля качества при котором мы проверяем соответсвие ожидаемого результата и фактического результату.
Насколько наш продукт отвечает требованиям.
Можем сделать это с помощью проэктирования тестов, их реализации и анализа, чтобы мы не нашли из после релиза.

Что такое qa qc testing?
QA - квалити ашуренс, он принимае участие в задачах на всех стадиях разработки,
 тестирования документации, ревью кода, внедренпие методик по работе с качесвом. Тестируемый, когда еще нет продкутка
QС - квалити контрол предоставить объективную картинку того, что происходит 
с качесвом на разных этапах разработки. 
Тестируемый продукт уже есть и готов к проверке.
Тестировщик - задача выявить и зафиксировать дефект, завели баг передали на разработчика.
 Тестируемый продукт уже есть и готов к проверке.

Зачем тестировщику платят деньги?
Во избежание финансовых и репутационных потерь компании.
Чем раньше мы найдём ошибок до пользователя, тем меньше мы потратим времени и денег на их исправление.

Суть работы тестировщика?
Сделать продукт по соответствиям требований заказчика (бизнес), 
пользовательских требований и функциональных.
*

Что такое качество? Это оценочная характеристика, свойсва насколько наш продукт соответсвкет требованиям, каким требованиям отвечает наш продукт.
Что такое качество по? ПО соответсвует техническим требованиям удовлетровление требованиям заказчика.

Требования? Откуда беруться? фокус группы, бизнес, требования ожидания наших пол.зователей.
Бизнес требования - на чём зарабатывать?
Пользовательские - какую позьзу этот продукт принесёт? в виде юзер-стори и юзер-кейсы (нпример, хочу иметь возможнгость перевести текст)
Функциональные - как наш продукт должен работать? (как наша кнопка наша будет работать

баг? Баг - баг (bug) — это отклонение фактического результата (actual
result) от ожидаемого результата (expected result)
ошибка? Ошибка – это действие человека, которое порождает неправильный результат.
дефект? Дефект - Отклонение фактического результата от ожиданий наблюдателя, 
сформированных на основе требований, спецификаций, 
иной документации или опыта и здравого смысла.

Верификация и валидация?
Верификация - делаем ли мы продукт правильно? (статичеки без запуска кода) 
(соблюдение всех норм качества и особеностей желания заказчика)
Валидация - делаем ли мы правильный продукт? удовлетровление потребностей клиента (бизнес)
*про самолёт пример: Пример: когда разрабатывали аэробус А310, то надо было сделать так, 
чтобы закрылки вставали в положение «торможение», когда шасси коснулись земли. Запрограммировали так, что когда шасси начинают крутиться, 
 то закрылки ставим в положение «торможение». 
 Но вот во время испытаний в Варшаве самолет выкатился за пределы полосы, так как была мокрая поверхность. 
 Он проскользил, только потом был крутящий момент и они, закрылки, открылись. 
 С точки зрения «верификации» — программа сработала, с точки зрения «валидации» — нет.
 Поэтому код изменили так, чтобы в момент изменения давления в шинах открывались закрылки.




Этапы разработки продуктов?
1. Требования - сбор и обработка требований, план, сроки, стоимость
2. Планирование - составляют спецификации, члены команды знакомяться с строками 
3. Дизайн - графический дизайн, его уникальное представления, макет локализации, надо тут уточнить для 
4. Разработка - программисты пишут код
5. Локализация - адаптация ПО к определенной культурной принадлежности и особенностям культуры языка, тщательное  лингвистическое и косметическое тестирование.
6. Тестирование - на прогон по функциональным тестам
7. Выпуск - выпуск продукта.
8. Поддерка - фитбэк от пользователя.

Когда надо начинать тестирование?  
С момента сбора требований.

Когда надо заканчивать тестирование (эвристика окончания тестирования)?
1. граничные сроки, установленные заранее; 
2. выполнение всех предусмотренных тест-кейсов; 
3. достижение определенного уровня тестового покрытия;
4. когда после определенного момента, мы практически не находим новых багов или критических дефектов;
5. решение менеджмента.
Если конкретный билд, 
Сдали проэкт;
Заказчик не платит;
Эвристика мёртвой лошади – когда смоук не прошёл;
 Эвристика «мертвой лошади»./пиньята - на смоуке не работает кнопочка и не согли перейти на новый 
 В программе слишком много ошибок, так что продолжение тестирования не имеет смысла. 
 Мы знаем, что все изменится настолько, что сведет на нет результаты текущего тестирования.
Пиньята - после одного бага много посыпалось
Время вышло -
Зашёл в тупик -
Когда на смоке нашёл блокер какая это эвристика? пиньята и мертвая лошадь;

 

ДОКУМЕНТАЦИЯ:
что такое баг репорт? 
Это задокоментированная ошибка в баг-трекинговой системе.

Структура баг репорта (основные пункты и все в целом)?
Основные:
Тайтл что? где? когда? что? где? при каих условиях? после нажатия на кнопку (блокер)
Блокер - это ошибка которая не даёт функционировать функционалу, можем выйти в резил с блокерами? надо эту задачу на лида и те на пм
Степы
Ожидаемый результат
Фактический результат




Не основные:
Айди
Окружение
Приорити
Северити
на кого заасаинин.
атачмант
версия билда
*если по куликову, то как отображаеться баг: часто или нет сколько раз? 5/5 



блокер когда может стать критикалом - обходной путь 

Какие тесты использовать, чтобы отловить больше багов? Смоук, критического пути,
регрессия, енд ту енд.

Санити тестирование - 


Тест-кейс?
Набор входных данных, условий выполнения
и ожидаемых результатов, разработанный с
целью проверки того или иного свойства или поведения программного средства.
Под тест-кейсом также может пониматься 
соответствующий документ,представляющий формальную запись тест-кейса.
-шаги,


*В тест-сьюты можно объеденить, а их в чек-листы.

Тест-кейс от баг-репорта?
В тест кейсе нет фактического результата!

Тест-план? Документ, описывающий и регламентирующий перечень работ по тестированию, а
также соответствующие техники и подходы,стратегию, области ответственности, 
ресурсы, расписание и ключевые даты.



Чек-лист? Набор идей [тест-кейсов]. Последнее слово
не зря взято в скобки, т.к. в общем случае
чек-лист — это просто набор идей: идей по
тестированию, идей по разработке, идей по
планированию и управлению — любых
идей.

айди, тайтл, ожидаемый, пройден или нет
+шаги вопроизведения, входные параметры, столбик сылка на баг

Какие чеклисты надо сделать перед релизом? Смоук чеклист, регрессия чеклист.

Зачем разработчику чеклисты?
Чтобы делать TDD (Test Driven Development) «разработка через тестирование»

Северити?
Приорити самый высокий? АСАП и Urgent
Приорити самыйй низкий? 

Блокер - 
Кейс: сохранить список покупок, но не выходит - северити мажор, приорити 
Кейс: книпка купить нажимаеться, но деньги не списываються - да, блокер, не выполнена бизнес 

Чем северити отличаеться от приорити?
Северити: серьёзность проблемы; бага зависит от функционала, как баг влияет на бизнес логику.
Приорити: зависит от того, как быстро надо пофиксить; как баг влиет на бизнес.

Низкий северити, высокий приорити: ошибка в логотипе, грамматическая ошибка
Высокий северити, низкий приорити: функционал бронирования билетов на сайте авиакомпании; если нажать  50 раз на кнопку то приложение падает.
генерация годового отчёта , сейчас июль, до марта фиксить не будут.

критикал северити, низкий приорити


Для кого пишуться тестовые сценарии?
Для себя и для разработчиков (для ТDD)



Локализация - адаптация ПО к определенной культурной принадлежности и особенностям культуры языка.
Интернационализация - процесс адаптации продукта под другие старны (арабский, где интерфейс с права на лево, или немецкий, где длинные слова)

Жизненный цикл локализации продукта:
1. Написание текста-исходника - сбор требований от маркетинга
2. Перевод и редактура - текст проверяют редактора
3. Автоматизированные проверки качества текстов. - этап передачи на инженеров качесва, проверка
4. Сборка - и
5. Скриншоты (Optional) - автотерстерам
6. Тестирование (Screenshots+Build+Testplain) - лигвисты, 
7. BUG FIX - на инженеров
8. Регресс - инженеры собирают
*Чем раньше мы подумаем за локализацию и интернацонализацию, тем дешевле это будет.


*Work around? Это обходные пути.
*Responsive и  adeptive design - Это когда подстройка дизайна.



Как тестировать поле номера телефона?	
Требования
Какие символы: минимум/максимум
Спецсимволы: тире, плюс, скобки
Маска ввода номера телефона есть или нету? Какая маска? + 380 (код оператора) и 7 цифр
Узнать валидные цыферки
Понала тестировать:
Позитивные тесты: проверить 
Негативные тесты: невалидные символы, не заполнять это поле, одну цифру ввести, может быть введен валидный код страны и не верный код, пограть с плюсом.

Как тестировать поле NAME?	
Как тестировать поле email?

Как тестировать поле дату?	
Только числа? нам поле не позволяет вводить другие символы? или валидация сработает, когда уже введем?
02 или 2 вводить?
Требования? Какие символы? есть ли маске? дд. мм. гггг (больше текущей даты нет)
вадидную, анализ граничных по каждому, все нолики, вставлю из буфера обмена, 
несуществующая дата, больше текущей дату, на высокосный год (27,28,29),
все минусы, тире, пробелы. *Чтобы в апреле не было 31 числа.
	
Что такое билд, релиз?
Билд – передаеться от разработчика к тестировщику
Релиз – от тестировщика к конечному пользователю.

ТЕХНИКИ ТЕСТ ДИЗАЙНА?:
Эквивалентное разбитие   - разбить на диапазоны
Граничные значение       - разбить на диапазоны (от 21 до 28) + граничные даты (28,29,30)
Таблица принятия решений -	- 
Попарное тестирование	- 
Причина и следствие (переходы)	-
Предугадывание ошибок	-

Время на тестирование? Как я это сделаю?	
объем и сложность, какие инстументы мне для этого понадобяться


ЦЕЛИ ТЕСТИРОВАНИЯ:
Чтобы продукт соответствовал ожиданиям клиента;

ТЕСТИРОВАНИЕ - это техника проверки качества путём сравнения ожижаемого результата и фактического
ОТЛАДКА      - это внесения изменений в код избаление (дебажить): выкотили билд, тестировщик сделал санити, 
скинул на программиста.


ПРИНЦИПИ ТЕСТИРОВАНИЯ:
Принцип №1 - тестирование показывает наличие дефектов. Тестирование может показать, что в
продукте существуют дефекты, но не сигнализирует о том, что дефектов не существует вообще. Но, даже если мы их вообще не
обнаружили, то мы не можем говорить о том, что их нет. 

Принцип №2 - исчерпывающее тестирование невозможно.Для того, чтобы минимизировать риски, есть специальные техники тест-дизайна, которые
помогают тестерам проектировать свои тесты так, чтобы с минимальными усилиями покрыть как можно больше
тестовых случаев и функциональностей.

Принцип №3 - это раннее тестирование. Т.е. тестовые активности должны начинаться как можно раньше
и всегда преследовать определенные цели. В данном случае экономия средств заказчика.

Принцип №4 - скопление дефектов. Он гласит так: в небольшом количестве модулей сокрыто большое
количество дефектов. И если мы вспомним с вами правило Парето, то оно применимо и к данному принципу:
80% дефектов находится в 20% функций. 

Принцип №5 - парадокс пестицида. Прогоняя одни и те же тесты вновь и вновь, вы столкнетесь с тем,
что они находят всё меньше новых ошибок, поскольку системы эволюционируют. Проведите аналогию с
применением какого-то химиката против насекомых, либо же каких-то сорняков. Если их постоянно травить
одним и тем же инсектицидом или пестицидом, то у них возникает привыкание, они адаптируются и меньшее
количество живности вымирает, либо уничтожается под действием того или иного токсиканта. 

Принцип №6 - тестирование зависит от контекста. Выбор методологии, техники или типа тестирования
будет напрямую зависеть от природы самой программы. Например, программное обеспечение для медицины
требует более тщательной проверки, чем компьютерная игра. Или же сайт с большей посещаемостью должен
пройти через серьёзное тестирование производительности, чтобы показать возможность работы в условиях
высокой нагрузки. Поэтому тестировщик всегда должен ответственно подходить к выбору той среды, в которой
он будет тестировать, к выбору той документации, которую будет тестировать. Например, если продукт
сложный, то лучше выбрать тест-кейсы, а не чек-листы.

Принцип №7 - это заблуждение об отсутствии ошибок. Каждому тестировщику не стоит полагать, что
если тестирование не обнаружило дефект, то программа готова к релизу. Нахождение и исправление дефектов
будут не важны, если система окажется неудобна в использовании и не будет удовлетворять нуждам
пользователя.




4. Типы и выды тестирования - они ничем не отличаються как они идут один за другими: 
нагрузочное
совместимости
связанное с изменениями: смоук, регрессия,анд то енд, и что-то ещё.

5. уровни и виды тестирования:
уровни: модульное, интеграционное (два модуля между собой), енд то енд (весь сценарий), 
приёмочное, регрисионное.
виды:




ВИДЫ ТЕСТИРОВАНИЯ: 
*Какие события инициируют регрессию? СМОУК
*Когда не надо делать смоук? всегда делаю смоук!
*В чём отличие видов тестирования и типов? никакой это одно и тоже.
*До СМОУКА что я буду делать? Когда впилили две кнопки? САНИТАРНОЕ тестирование 
(по фиче которая реализована, тестирую ёё и всё прилегающее, по документации и негативными тестами), ПОТОМ СМОУК и РЕГРЕССИЮ, после ПРИЕМОЧНОЕ.
*САНИТИ - проверить смежных областей, добавили две кнопки? функционал с какими модулями он функционирует.
(позитивное и негативными тестами), ПОТОМ СМОУК и РЕГРЕССИЮ, после ПРИЕМОЧНОЕ.
*Когда я не буду делать РЕГРЕССИЮ?	
Когда не прошли смоук. Когда пм уже говорит не делать.«Нет времени, релизим»
Но если если есть время, надо смоук и регрессию.
Когда была new ficha test и это новое не зацепило старый функцтонал.
*Какой вид тестирования в нью фича тест? Модульный, юнит.
*приемочное после регресии.
*Когда я не буду делать СМОУК?
Когда мы хотели зарелизить, но функционал не доделан.
Когда пинта и ошибки валяться одна за другой.
После релиза.
*В каком случает баг на смоуке, баг северити перейдёт в критикал? - 
баг на смоке будет тривиал? - это ошибка в тексте и визуалка.
*Если кнопка на смоуке тривиал, заводим баг.
*Если на Смоуке нашли баг после, которого не можем перейти на новый этап, тогда останавливаем.

ИССЛЕДОВАТЕЛЬСКОЕ ТЕСТИРОВАНИЕ  - это когда мы ЗНАЕМ как работает система, сценарный подходы
но не по стандартным тестовым сценариям
AD HOC                          - импровизация на основе своего опыта как может рабоатать это приложения, без наличия,
с точки зрения обычного пользователя, без документации, 
MANKEY                          - как 3 х летнийс целью сломать систему, 
Экплоритари - вы что-то протестировали и это записали, тестрирование паралельно документированию.

По доступу к коду? 	
ЧЁРНЫЙ   – просто кнопочки нажимаю (просто кручу руль)
БЕЛЫЙ    – есть доступ к коду, билд собрали есть картинка (внутряночка) 
СЕРЫЙ    – имею доступ не к коду, а к БД, зарегала пользователя на Вебк и проверила,
трафик посмотрела в Фидлере или в Чарлик (как селект сделать) (поменять колесо)
           
По запуску кода на исполнение?	
ДИНАМИЧЕСКОЕ – с запуском кода, Бекэнд, фронтенд
СТАТИЧЕСКОЕ  – без запуска кода, Код, архитектура, дизайн.

По позитивности?
ПОЗИТИВНОЕ – смоук по позитивному сценарию, если система красным засветилась
НЕГАТИВНОЕ – на два раздела: ввела в форму в которой он не должен быть и стала красной.
Второй: ввели, то что нельзя вводить и не засветилась. Система не знала как работать с этими данными

Уровни тестирования?
КОМПОНЕНТНОЕ   - (модульное) фокусируется на компонентах, которые могут быть проверены отдельно. Цели компонентного тестирования
включают,Снижение риска, Проверку, соответствует ли функциональное и нефункциональное поведение
компонентов установленным проектным требованиям, Укрепление уверенности в качестве компонента;
ИНТЕГРАЦЫОННОЕ - 
СИСТЕМНОЕ      -
ПРИЁМОЧНОЕ     -

	
Упрощённая класиффикация тестирования?
Куликов	
Классификация по уровню детализации? 	
Модульное -
Интеграционное - 
системное - 


По степени важности?
Смоук - 
Критический путь
Регрессия – 
Енд ту енд
Ретесттинг
Нью фича тест

По уровню важности?	
Виды?
модульное
интеграцтонное

Не функциональные:
УСТАНОВКИ
Локализация
Интернационализация
Кроссбраузерное
Отказ востановления (если сервак упал, но он делал бэкап чтобы сохраниться и восстановиться на том же месте)
Маштабируемости
Нагрузки
Безопасности
Стресса

Виды тестирования связанные с изменениями?
Смоук
Критический путь
Регрессия – 
Енд ту енд
Ретесттинг
Нью фича тест

Уровни тестирования? 
Компонентное/ юнит, 
интеграционное, 
системное,
приемочное

Перечислите виды и типы тестирования?

Тесты связанные с изменениями?
Ретестинг
Регрессия - старое
Санитарное – смежные функции
Смоук  - по позитивному сценарию


Обходные пути блокера? Зайти с другого устройства,
Входные параметры по работе с смоук сценария? Характер - позитивные (те прогоны на которые програма хнает ответы, система знает, что делать)






МОБИЛЬНОЕ ТЕСТИРОВАНИЕ:
Кейс установки мобильного приложения?
Чему дллжно соответствовать моб приложение перед релизом? Проверить лигал по безопасности? гайдлайны.
разные оес, пуши, пририывание, обновы, фейс айди, поворот экрана
подтвержение смс транзакции - автоматическая, предоставить доступ присылать сообщения, сенсоры, фотик, блокирование экрана.
Горизонтальная и вертикальное расположение? если не проверить, чем это черевато?
Что происходит когда меняеться? перерисовыеться графика, страрый экран в новом расположении.
Каждая последующая кнопка, все экраны удаляються, и прорисовка экранов поновой.
Скан карточки через фотик и возможность пересылать денюжку .
*Пуши - способы через что они могут быть доставлены - сервисы пушей офлайн, и бэкенд не может достучаться, и когда онлайн - напрямую пуш идентификацию;


ТЕСТИРОВАНИЕ ВЕРСТКИ:
Верстка - процес создания страниц; Дизайниер создает картинку, верстальщик фронтенд дев - верстает сайт, тестировщик проверяет на валидность всех требований.
чеклист верстки: соответсвие макету 1:1 - тул Перфект Пиксел
кроссбраузерность - 
Мобильные устройства - через дев тулы
Валидность кода - проверка разметки WЗС
Скорость загрузки - быстрый интернет делает мир дыстрее
независимость блоков ССС - каскадность, если НТМЛ - это скилет, ССС - это мускулы.
Структура каталогов в верстке - Джава скрипт, НТМЛ, ССС.
а/b тесты




СОЦИАЛЬНЫЕ ЛОГИНЫ:
через гугл, соц степени, через яблоко
Факторы Аутенфикация? ЭТО аут 2.0 - когда мы доверяем свою регистрацию на доверенное приложение оно редиректид на соц сети.



Кейс: есть несколько пейволов/кошельков: какие варики оплаты нашего сервиса какие не надо тестировать? 
все надо проверить оплаты, мир разнообразен, и никогда не предугадаешь
Какие кейсы оплаты: проверки платного контента на мобилку? Будут ли отображаться тот наработанный/накопленный опыт из бесплатной версии в платной...,
откат, пересчёт, если подписка закончилась? если на карте нет денег, прийдет оповещение, надо проверить трекнуть и ему вернёться ему всё то, что было до оплаты.
Кейсы оплат: через яблоко вернкться платный контент,  у андроид - нет.
*нельзя пользоваться попарно? потому что надо всё проверить.
на ютуб если что тм пишет - поменяйте способ оплаты.

Кейс Тест на плптёжную систему:  карта с маской (виза и мастер карты), какую карту мы скинем, не верный код? если выбрали визу, но начали? по сроку не валичное время:
будущее, формат даты, что за чем? дроб даун? экспандиться или нет? Спецсимволы? пробелы? Колёсико? сиви код? чего-то не нажали? код с мобилки прислали подтверждение?
Есть контактные данные саппорта.


СТОРИДЖЫ:
Кукис сторидж - 
Кеш сторидж -
Локал сторидж - 
Кейс: Добавили товары в корзинку, закрыли, а они подтянулись в другой раз? По токену и 
локальный сторидж сохраниться.
Кейс: дать надо челлику корзину, когда он обновил браузер, и надо ему даь его корзинку с товаром? 
Через логин, а корзина сохраниться на серваке в базе. Почему они так делают? по протоколу Нттп спроить/трекнуть историю браузера.




Зачем нужен POSTMAN?
Там есть раннер - чтобы автоматически гонять раны
Зачем окружение в Постмане?
чтобы создать набор переменных, которым можно присвоить значение и использовать при работе
и ещё запросы могут передавать данные в окружение и другие запросы эти данные будут использовать
*ну вообще смысл в том чтобы тесты писать универсальными, 
и если тебе что-то изменить, то ты меняешь в окружении, а не в каждом запросе отдельно.




SQL:
по убыванию
по возростанию? без ар
Как вывести людей от 1000 до 2000: селект фром где одна Таблица
как вывести людей котрые живут в Москве и в Питере: селект через ОР (или)
вывести всех сотрудниц у которых зп от 1000 до 2000, которые попали в контору после 5 декабря 2020 года:
слект*фром емплаис салери 1000-2000 вере гендер=Ж, вере сити москов ор питер.
Про джоины: иннер, лефт джоин, райт джоин, фулл
Джоин - горизонтально
Иннер -
Лефт - 
Райт - 
фуулл-
Юнионом - как соеденить? вертикально соединяет, одинаковые столбики!
Кросс джоин (юнион) - перемножает все данные., селект*фром 1,2;
Как кампуктер поймёт где левая и где правая? 
что должно быть одинаковым? 
Релляция? это взаимоотношения по ключам (праймари и форен), зачем нужна релиция? что дают реляции между табличками? 
чтобы была взаимосвязь
Мы при релиции обращаемся к родительской папке, если такой ойти есть, то он даст положительный ответ, если нет, то ответа не будет. И 
лишняя информация не пройдёт.
Тип данных должен быть чтобы их сматчить.
например: если у нас есть такой емейл есть в бд, то такой челлик зайдет в базу (регистрация), а если нету, 
то регистрация не пройдет, потому что нет.
Как обьеденить два запроса без джоина? 
Каскадирование? 
Гроуп бай? за ним идет Хевинг.


КЛИЕНТ СЕРВЕРНАЯ АРХИТЕКТУРА:
из чего состоит клиент?
веб сокеды?
Аякс? 
Идентификация
Аутенфикация
Авторизация
Протоколы ТСP и UDP?	
ТСP – надёжный транспортный протокол с ответом
UDP - 


МЕТОДЫ HTTP?:
Ген - получение /clietn/23
Пут - обновление, изменение
Пост - создагие
Делит - удалить
ХЕД - 
Какие иденпатентный -  Гет
Можем зарегать пользователя через Гет? можно, написаь в урл, но это будет не безопастно.
а постом спросить могу не создавая? да.
HTTS - шифрованое протоколом TLS.




APLICATION PROGRAM INTERFACE:
Что такое API? 
Это програмный интерфейс, который позволяет взаимодействовать приложениям без влияния пользователя.
Зачем нужен АПИ? ПИ для того чтобы проги были надёжнее, отдельные компоненты, натсройка связали
между програмами.(авиасейлс - сайт агрегатор, календарь, погода, кнопка авторизации)
Иногда через апи зарабатывают (погода)
Веб-сервисы - прога котрая организовывает взаимодействие: интеграция процессов без участия людей.
Разница между веб сервисом АПИ и АПИ.
Рест - Репресентейшн стейт трансфер - это архитектурный стиль, определяет как компоненты должны между собой взаимодействовать,
по запосу и ответу.
URI? Ресурс это ключевая абстрация некой сущности (клиенты, заказы клиентов, товары)
Эндпоинт URI - конечная точка, последовательность символов.
АПИ состоит из ендпоинтов - (точки касания) у каждой точки касания есть свой урл.
/client
/client23 - какой клиент
/clietn/4/orders - клиент
принципи РЕСТ: 
1. клиент-сервер: отделяем клиентский сервер от пользовательского.
4. единобразие иньерфейса
5. Слои (одни компоненты не видят другие)
6.Код по требованию.
JSON:
всё в кавычках
только текст
велью может быть без кавычек - 
другую джейсоночку могу ввести в другую
могу ли я? в качесве велью вставить хмл, делаю кавычки.
хмл может быть ключём в джейсоне ( в кавычка)
В чём можно ещё создать ключ? - только стринг, когда они переформатируються;
Схема json - ключ=значение.
джейсон от хмл отличаеться? хмл - теговая, может быть с открытой тегой, закрытая, джейсон - 
аштмл - язык разметки ОТ хмл - у хмл - расширяемый формат данных 
Aplication program interface – как между собой общаются клиенты сервера с другим сервером = через протокол нттп.
сервера черзе интернет - по нттпс
если програма - апи по нттп
если спецсерверы - там свои протоколы;
АПИ - это не обязательный атрибут, если нет общения.
Как тестировать API? 
через Постман и Сваггер (покажет описание апи). Сравнивать ответы по чек-листам.
Статус код проверить
Сравнить запрос/ответ
из массива достать элемент
Схема json - ключ=значение.
Запросы я отправляю в ендпоинт (регисирация, отправка, ссылка), а сервер отвечает реквестами.
Из чего состоит АПИ: протокол, адрес из ендпоинтов
Специфический кейсы: для всех веб сервисов, хмл или джейсон, = изменение формата данных. Типы данных для джейсона: булевный, стринговый





Хедеры реквеста? тайп, сервер, окружение, метод, 
что в хедере юзер агент?

DEVTOOLS:
В какой вкладке Девтула посмотреть трафик веб-проэкта?
в Нетворке? там НТТР запросы
*В Мозиле можно перехватить трафик и подменить.
Адаптивный - если резко то адаптив., выбрать настроить разрешения экрана.
Респонсивный - двигать экран, если плавно то респонс.
Работа с разными скоростями интернета (2дж,3жд, отключить интернет)
Где изменить GPS? вкладка 
Хедеры где смотреть? Заголовки в укладки нетворк
Куки где смотреть? Апликатион, сторедж, локал и сейшнс сторидж - они дают 
кеш от куки отличаються: Куки - юзерские насттройки, кеш - серверные. на жёсткий диск и тот и то временные файлы. 
в консоле? 
в нетворк? логи
Мобайл респонсив, надо проверить версию на мобилке и на десктопе? какое окружение, в каких версиях будет работать? 
что популярно у юзеров моего приложения?

ПРОКСИ И ВПН:
Как взять и сделать чтобы мой браузер слал трафик не на прямую, а через прокси? ВПН браузерный 
(только то, что открыл, будет тянуть трафик)  и стацтонарный (весь трафик через комп, месенжеры)
Механика Прокси сервера? Изменить айри Промежуток между Клинтом и сервером; 
Клиен попадает на прокси, а проски отправляет через свои каналы на сервер; 
и таким образом мы обходим обойти и проверить локализацию.
КЕЙС: Если баг на фронте, то возьму логи из консольки, тким образом: логи и сейв файлс.
Как посмотреть что улетело на бэк? боди реквест надо увидеть в вкладке ""
Как в Сафари включить Девтулы?
прокси это часть впн:
ВПН - виртуал прайват нетворк.
Суть ВПН? зашифрованые данные, ставим локал германию, а он отправляет на сайт отвечает на сервер, 
сервер зашифровал и вернул тебе.
Прокси может существовать без ВПН, ничего не шифрует.
Если надо получить какой-то сайт можно, но этот запрос не будет шифрован.


CONTENT DELIVERY NETWORK:




ГАЙДЛАЙНЫ:
У Апл безопастность, не пустят на апп-стор.
Эплов судили, что они они вкрутили только стои системы оплаты, а не все. 
И теперь они запрашивают сертификацию, чтобы платёжные системы заходили.
 



SCRUM:
Чем заканчиваеться Скрам? Новым билдом/, который можно показать, который можно показать (отладка того, что не работало).





GIT BASH: 
Сисиема ослеживания версий.
pwd                 - посмотреть, где я
ls -la              - показатьсписок содержимого в папке
mkdir               - создать папку
cp                  - скопировать от куда? что? / куда? что?
cd                  - открыть папку
сd ./               - зайти в родительскую директорию
сd ..               - родительская папочка
mv                  - перемещение /откуда и куда/            
grep                - в реальном времени
head                - голова
tail                - хвост
date                - дата и время
less                - просмотреть содержимое длинного файла
git clone           - скопируем свой репозирорий на локальный компуктер
git add             - добавить файл для отслеживания
touch f_1.txt       - создать файл     
git status          - показать состояние проекта, чекать что отслеживаеться, а что нет.
git add             - добавить файл для отслеживания, трекнуть изменения
git add .           - отслеживать ВСЕ файлы, которые не отслеживали ранее
git commit          - команда для записи изменений в репозиторий Git
git commit -m       - команда для записи индексированных изменений в репозиторий Git "сообщение"
git push            - отправить изменения на внешний репозиторий
vim f_1.txt         - редактировать
git commit -am      - команда для записи изменений в одну строчку (отслеживание и сообщение)
git fetch           - проверяет есть ли изменения на ВНЕШНЕГО репозитории
git pull            - используется для извлечения из ВНЕШНЕГО репозитория, если аишет олреди ар тудей, то всё сочитаеться.



Чем Линукс отличаеться от Виндовс? 
Чем Андроид отличаеться от Яблоко?  
андроид - нельзя откотить, количество процессоров, открыта и закрыта ОС;
Аёса - можно откотить,




Кейс: не сработала кнопка «расплатиться»
Во первых, узнаю есть ли у клиента интернет.
Перзагрузить комп
Перейдите в другой браузер
Какой товар покупаете?
Может нет авторизации?
Пойти к бэкенду попросить логии и узнать, что делал этот клиент на магазине.
Воиспроводить у себя на кампуктере.
Баг-репорт завести
Заасайнила на разработчика.
Попросить саппорт, чтобы они связались с клиентом и проследить получилось ли у клиента.
Почистить кеш и куки.

Кейс: если ты один тестировщик на проэкте?
1. исследовать ad-hoc.
2. Смоук
3. Критикал пас
4. Анд-то-енд
5. Регрессия
6. Написать чек-листы  по: смоук, критикал пас, анд-то-енд, по регрессии.

Кейс: форма, 4 поля регистрации, и одна кнопка зарегаться, в БД заходит только 3 поля!
узнать что за форма? спросить обязательно ли оно.
Зашла в Девтулс сомотрю как там отрабатываеться.
1. Валидация на фронте и бэке различная, на фронте ок, на бэке не ок.
возможно на фронте не прописано, что это поле обязательно;
2. Метод не тот.
3. Зайти в Чарлик
4. Пойти к фронтенду - проверить , возможно не прописано АПИ, узнать требования - может она там не нужна.
Что формируеться на фронте перед тем как отправиться - джейсоночка запрос-формируеться и должна полететь на бекэнд, 
но в этой джейсоночке ошибочка (там есть дава параметра, куда ложить и что ложить, КЕЙ и ВЕЛЬЮ)
 (велью дата, массив)
 5. Проблема в ВЕЛЬЮ - там пустое значение; ключ есть, а велью пустое.
 6. На этапе отправки джейсоночки (АПИ) - если Постом ок, если Гетом - нету. Ендпойнты АПИ - точки входа, УРЛы, куда шлют запросы. Бэк написали новый эндпойнт 4 поля, а фронт - 
 шлют запрос, где обрабатываються 3. Надо обновить фронт.
 7. На бэке забыли допичать, чтобы кидало с 4 строчки: посылаеться с фронта но на бэке не обрабатываеться.
 8. спарсили на бэке, но на фронте не отображаеться.
 9. С БД на бэке, как писать запросы? СКЛ - ИНСЕРТ что-то там и полетело в БД. Через ORM? не прямо, а фреймворк. 


Кейс: Два значения улетает в одно поле, нейм и ласт нейм.

Кейс: протестируйте домофон.
есть дислей? видео или обычный? обычный
на индикации? трубка? с биометрикой? да, ключ какой: просто код, по биометрии (сетчатка глаза, палец).
Кейс со сброосм
флоу 1: подошли к домофону, ввели код он открылся
флоу 2: сброс параметров, не ту квартиру
флоу 3: магнитной карточкой
4. эквивалентное разбиение
5. граничные значения, ноль и что будет, со *,
А если зажать кнопку, будут ли вводиться цифры?
а если в очках?
1-97,Введи код, нажми В, не дожидаясь поднятия трубки, приложи чип и т.д.


Кейс: тестируем мусорный бак с ножкой.
ресурс ножки, обьём, материал, гарантия, в каких условиях будет использовать? стресс тестирование - котами, детьми, кто-то зацепил, стеклянная
уборщица; мусорка герметичная или нет? из какого материала она сделана?


405 код как создать по клиенту? - вызвать неподдерживаемый код, через Постман, Чпрльз Реврайл



Важно*
Если на собесе спрашивают теорию и стоит на своём, то говорить «Если вы хотите так, то так и будем думать»
Если сказала, то опираться на источник*
Говорить теорию и сразу практику
*интернационализация – говорить, что делала на практике
*нагрузочное  - включали нагрузочное и погнали
Докажи разработчику, что это не баг – дать пример;
Произвести впечатление.
Расположить к себе на собесе людей: понравиться как человек, как нейросеть обучается общаться с людьми в различных эмоциональных состояниях. 
Есть люди: с которыми никак, есть человек ок, люди, которые нервируют и я ищу слова как выжатый лимон, люди, с которыми мы встретились и мне в кайф,
 шутки сами по себе, волна для разговора. Насколько ты адаптивный человек, это тренируется через подходы к человеку. Книга – «Теория юмора», *что-то съюморить. 
Сменить тему в стрессе сложно. А чтобы не было стресса, надо чаще быть в этом состоянии.
*знать какой новый функционал выкатыват андроид и Эплы.
*баз фактор - кто-то ушёл и все не знают что делать? 
*Почему люк круглый? чтобы человек пролез.
*Какие последние новости на Сафари?


Dbevear - работа с селектом, когда выборка, по номеру, айди;
Свагер - нет лоудера, когда не проходит апи колл
Редис - 
UI Kit - чтобы было UI Kit - елементы интерфейса, хлебные крошки (это со сказки Грета и кто-то, они кидали хлебные крошки, чтобы вернуться домой), 
стандартизация, огромный сайт, чтобы был едиый стить.

Figma - Дизайн Система - это такой гайдлайны
Asset Management 
Фидлер - 
=======
ОБЩИЕ ВОПРОСЫ О ТЕСТИРОВАНИИ: 

Что такое тестирование? 
Это техника контроля качества при котором мы проверяем соответсвие ожидаемого результата и фактического результату.
Насколько наш продукт отвечает требованиям.
Можем сделать это с помощью проэктирования тестов, их реализации и анализа, чтобы мы не нашли из после релиза.

Что такое qa qc testing?
QA - квалити ашуренс, он принимае участие в задачах на всех стадиях разработки,
 тестирования документации, ревью кода, внедренпие методик по работе с качесвом. Тестируемый, когда еще нет продкутка
QС - квалити контрол предоставить объективную картинку того, что происходит 
с качесвом на разных этапах разработки. 
Тестируемый продукт уже есть и готов к проверке.
Тестировщик - задача выявить и зафиксировать дефект, завели баг передали на разработчика.
 Тестируемый продукт уже есть и готов к проверке.

Зачем тестировщику платят деньги?
Во избежание финансовых и репутационных потерь компании.
Чем раньше мы найдём ошибок до пользователя, тем меньше мы потратим времени и денег на их исправление.

Суть работы тестировщика?
Сделать продукт по соответствиям требований заказчика (бизнес), 
пользовательских требований и функциональных.
*

Что такое качество? Это оценочная характеристика, свойсва насколько наш продукт соответсвкет требованиям, каким требованиям отвечает наш продукт.
Что такое качество по? ПО соответсвует техническим требованиям удовлетровление требованиям заказчика.

Требования? Откуда беруться? фокус группы, бизнес, требования ожидания наших пол.зователей.
Бизнес требования - на чём зарабатывать?
Пользовательские - какую позьзу этот продукт принесёт? в виде юзер-стори и юзер-кейсы (нпример, хочу иметь возможнгость перевести текст)
Функциональные - как наш продукт должен работать? (как наша кнопка наша будет работать

баг? Баг - баг (bug) — это отклонение фактического результата (actual
result) от ожидаемого результата (expected result)
ошибка? Ошибка – это действие человека, которое порождает неправильный результат.
дефект? Дефект - Отклонение фактического результата от ожиданий наблюдателя, 
сформированных на основе требований, спецификаций, 
иной документации или опыта и здравого смысла.

Верификация и валидация?
Верификация - делаем ли мы продукт правильно? (статичеки без запуска кода) 
(соблюдение всех норм качества и особеностей желания заказчика)
Валидация - делаем ли мы правильный продукт? удовлетровление потребностей клиента (бизнес)
*про самолёт пример: Пример: когда разрабатывали аэробус А310, то надо было сделать так, 
чтобы закрылки вставали в положение «торможение», когда шасси коснулись земли. Запрограммировали так, что когда шасси начинают крутиться, 
 то закрылки ставим в положение «торможение». 
 Но вот во время испытаний в Варшаве самолет выкатился за пределы полосы, так как была мокрая поверхность. 
 Он проскользил, только потом был крутящий момент и они, закрылки, открылись. 
 С точки зрения «верификации» — программа сработала, с точки зрения «валидации» — нет.
 Поэтому код изменили так, чтобы в момент изменения давления в шинах открывались закрылки.

1. Цели тестирования?
Чтобы продукт соответствовал ожиданиям клиента;
*у каждого теста есть своя цель - её надо происать

2. Тестирование и отладка?
Тестирование - это 
Отладка - это внесения изменений в код избаление (дебажить) "выкотили билд, тестировщик сделал санити, 
скинул на программиста"

3. Принципи тестировния - 

4. Типы и выды тестирования - они ничем не отличаються как они идут один за другими: 
нагрузочное
совместимости
связанное с изменениями: смоук, регрессия,анд то енд, и что-то ещё.

5. уровни и виды тестирования:
уровни: модульное, интеграционное (два модуля между собой), енд то енд (весь сценарий), 
приёмочное, регрисионное.
виды:


Этапы разработки продуктов?
1. Требования - сбор и обработка требований, план, сроки, стоимость
2. Планирование - составляют спецификации, члены команды знакомяться с строками 
3. Дизайн - графический дизайн, его уникальное представления, макет локализации, надо тут уточнить для 
4. Разработка - программисты пишут код
5. Локализация - адаптация ПО к определенной культурной принадлежности и особенностям культуры языка, тщательное  лингвистическое и косметическое тестирование.
6. Тестирование - на прогон по функциональным тестам
7. Выпуск - выпуск продукта.
8. Поддерка - фитбэк от пользователя.

Когда надо начинать тестирование?  
С момента сбора требований.

Когда надо заканчивать тестирование (эвристика окончания тестирования)?
1. граничные сроки, установленные заранее; 
2. выполнение всех предусмотренных тест-кейсов; 
3. достижение определенного уровня тестового покрытия;
4. когда после определенного момента, мы практически не находим новых багов или критических дефектов;
5. решение менеджмента.
Если конкретный билд, 
Сдали проэкт;
Заказчик не платит;
Эвристика мёртвой лошади – когда смоук не прошёл;
 Эвристика «мертвой лошади»./пиньята - на смоуке не работает кнопочка и не согли перейти на новый 
 В программе слишком много ошибок, так что продолжение тестирования не имеет смысла. 
 Мы знаем, что все изменится настолько, что сведет на нет результаты текущего тестирования.
Пиньята - после одного бага много посыпалось
Время вышло -
Зашёл в тупик -
Когда на смоке нашёл блокер какая это эвристика? пиньята и мертвая лошадь;

 

ДОКУМЕНТАЦИЯ:
что такое баг репорт? 
Это задокоментированная ошибка в баг-трекинговой системе.

Структура баг репорта (основные пункты и все в целом)?
Основные:
Тайтл что? где? когда? что? где? при каих условиях? после нажатия на кнопку (блокер)
Блокер - это ошибка которая не даёт функционировать функционалу, можем выйти в резил с блокерами? надо эту задачу на лида и те на пм
Степы
Ожидаемый результат
Фактический результат




Не основные:
Айди
Окружение
Приорити
Северити
на кого заасаинин.
атачмант
версия билда
*если по куликову, то как отображаеться баг: часто или нет сколько раз? 5/5 



блокер когда может стать критикалом - обходной путь 

Какие тесты использовать, чтобы отловить больше багов? Смоук, критического пути,
регрессия, енд ту енд.

Санити тестирование - 


Тест-кейс?
Набор входных данных, условий выполнения
и ожидаемых результатов, разработанный с
целью проверки того или иного свойства или поведения программного средства.
Под тест-кейсом также может пониматься 
соответствующий документ,представляющий формальную запись тест-кейса.
-шаги,


*В тест-сьюты можно объеденить, а их в чек-листы.

Тест-кейс от баг-репорта?
В тест кейсе нет фактического результата!

Тест-план? Документ, описывающий и регламентирующий перечень работ по тестированию, а
также соответствующие техники и подходы,стратегию, области ответственности, 
ресурсы, расписание и ключевые даты.


Чек-лист? Набор идей [тест-кейсов]. Последнее слово
не зря взято в скобки, т.к. в общем случае
чек-лист — это просто набор идей: идей по
тестированию, идей по разработке, идей по
планированию и управлению — любых
идей.

айди, тайтл, ожидаемый, пройден или нет
+шаги вопроизведения, входные параметры, столбик сылка на баг

Какие чеклисты надо сделать перед релизом? Смоук чеклист, регрессия чеклист.

Зачем разработчику чеклисты?
Чтобы делать TDD (Test Driven Development) «разработка через тестирование»

Северити?
Приорити самый высокий? АСАП и Urgent
Приорити самыйй низкий? 

Блокер - 
Кейс: сохранить список покупок, но не выходит - северити мажор, приорити 
Кейс: книпка купить нажимаеться, но деньги не списываються - да, блокер, не выполнена бизнес 

Чем северити отличаеться от приорити?
Северити: серьёзность проблемы; бага зависит от функционала, как баг влияет на бизнес логику.
Приорити: зависит от того, как быстро надо пофиксить; как баг влиет на бизнес.

Низкий северити, высокий приорити: ошибка в логотипе, грамматическая ошибка
Высокий северити, низкий приорити: функционал бронирования билетов на сайте авиакомпании; если нажать  50 раз на кнопку то приложение падает.
генерация годового отчёта , сейчас июль, до марта фиксить не будут.

критикал северити, низкий приорити


Для кого пишуться тестовые сценарии?
Для себя и для разработчиков (для ТDD)



Локализация - адаптация ПО к определенной культурной принадлежности и особенностям культуры языка.
Интернационализация - процесс адаптации продукта под другие старны (арабский, где интерфейс с права на лево, или немецкий, где длинные слова)

Жизненный цикл локализации продукта:
1. Написание текста-исходника - сбор требований от маркетинга
2. Перевод и редактура - текст проверяют редактора
3. Автоматизированные проверки качества текстов. - этап передачи на инженеров качесва, проверка
4. Сборка - и
5. Скриншоты (Optional) - автотерстерам
6. Тестирование (Screenshots+Build+Testplain) - лигвисты, 
7. BUG FIX - на инженеров
8. Регресс - инженеры собирают
*Чем раньше мы подумаем за локализацию и интернацонализацию, тем дешевле это будет.


Work around? Это обходные пути.
URL – это?
Эндпоинт – это? 
Responsive и  adeptive design - Это когда подстройка дизайна.





Как тестировать поле номера телефона?	
Требования
Какие символы: минимум/максимум
Спецсимволы: тире, плюс, скобки
Маска ввода номера телефона есть или нету? Какая маска? + 380 (код оператора) и 7 цифр
Узнать валидные цыферки
Понала тестировать:
Позитивные тесты: проверить 
Негативные тесты: невалидные символы, не заполнять это поле, одну цифру ввести, может быть введен валидный код страны и не верный код, пограть с плюсом.

Как тестировать поле NAME?	
Как тестировать поле email?

Как тестировать поле дату?	
Только числа? нам поле не позволяет вводить другие символы? или валидация сработает, когда уже введем?
02 или 2 вводить?
Требования? Какие символы? есть ли маске? дд. мм. гггг (больше текущей даты нет)
вадидную, анализ граничных по каждому, все нолики, вставлю из буфера обмена, 
несуществующая дата, больше текущей дату, на высокосный год (27,28,29),
все минусы, тире, пробелы. *Чтобы в апреле не было 31 числа.
	
Что такое билд, релиз?
Билд – передаеться от разработчика к тестировщику
Релиз – от тестировщика к конечному пользователю.

ТЕХНИКИ ТЕСТ ДИЗАЙНА?:
Эквивалентное разбитие   - разбить на диапазоны
Граничные значение       - разбить на диапазоны (от 21 до 28) + граничные даты (28,29,30)
Таблица принятия решений -	- 
Попарное тестирование	- 
Причина и следствие (переходы)	-
Предугадывание ошибок	-

Время на тестирование? Как я это сделаю?	
объем и сложность, какие инстументы мне для этого понадобяться




ВИДЫ ТЕСТИРОВАНИЯ: 
*Какие события инициируют регрессию? СМОУК
*Когда не надо делать смоук? всегда делаю смоук!
*В чём отличие видов тестирования и типов? никакой это одно и тоже.
*До СМОУКА что я буду делать? Когда впилили две кнопки? САНИТАРНОЕ тестирование 
(по фиче которая реализована, тестирую ёё и всё прилегающее, по документации и негативными тестами), ПОТОМ СМОУК и РЕГРЕССИЮ, после ПРИЕМОЧНОЕ.
*САНИТИ - проверить смежных областей, добавили две кнопки? функционал с какими модулями он функционирует.
(позитивное и негативными тестами), ПОТОМ СМОУК и РЕГРЕССИЮ, после ПРИЕМОЧНОЕ.
*Когда я не буду делать РЕГРЕССИЮ?	
Когда не прошли смоук. Когда пм уже говорит не делать.«Нет времени, релизим»
Но если если есть время, надо смоук и регрессию.
Когда была new ficha test и это новое не зацепило старый функцтонал.
*Какой вид тестирования в нью фича тест? Модульный, юнит.
*приемочное после регресии.
*Когда я не буду делать СМОУК?
Когда мы хотели зарелизить, но функционал не доделан.
Когда пинта и ошибки валяться одна за другой.
После релиза.
*В каком случает баг на смоуке, баг северити перейдёт в критикал? - 
баг на смоке будет тривиал? - это ошибка в тексте и визуалка.
*Если кнопка на смоуке тривиал, заводим баг.
*Если на Смоуке нашли баг после, которого не можем перейти на новый этап, тогда останавливаем.

ИССЛЕДОВАТЕЛЬСКОЕ ТЕСТИРОВАНИЕ  - это когда мы ЗНАЕМ как работает система, сценарный подходы
но не по стандартным тестовым сценариям
AD HOC                          - импровизация на основе своего опыта как может рабоатать это приложения, без наличия,
с точки зрения обычного пользователя, без документации, 
MANKEY                          - как 3 х летнийс целью сломать систему, 
Экплоритари - вы что-то протестировали и это записали, тестрирование паралельно документированию.

По доступу к коду? 	
ЧЁРНЫЙ   – просто кнопочки нажимаю (просто кручу руль)
БЕЛЫЙ    – есть доступ к коду, билд собрали есть картинка (внутряночка) 
СЕРЫЙ    – имею доступ не к коду, а к БД, зарегала пользователя на Вебк и проверила,
трафик посмотрела в Фидлере или в Чарлик (как селект сделать) (поменять колесо)
           
По запуску кода на исполнение?	
ДИНАМИЧЕСКОЕ – с запуском кода, Бекэнд, фронтенд
СТАТИЧЕСКОЕ  – без запуска кода, Код, архитектура, дизайн.

По позитивности?
ПОЗИТИВНОЕ – смоук по позитивному сценарию, если система красным засветилась
НЕГАТИВНОЕ – на два раздела: ввела в форму в которой он не должен быть и стала красной.
Второй: ввели, то что нельзя вводить и не засветилась. Система не знала как работать с этими данными

Уровни тестирования?
КОМПОНЕНТНОЕ   - (модульное) фокусируется на компонентах, которые могут быть проверены отдельно. Цели компонентного тестирования
включают,Снижение риска, Проверку, соответствует ли функциональное и нефункциональное поведение
компонентов установленным проектным требованиям, Укрепление уверенности в качестве компонента;
ИНТЕГРАЦЫОННОЕ - 
СИСТЕМНОЕ      -
ПРИЁМОЧНОЕ     -

	
Упрощённая класиффикация тестирования?
Куликов	
Классификация по уровню детализации? 	
Модульное -
Интеграционное - 
системное - 




По степени важности?
Смоук - 
Критический путь
Регрессия – 
Енд ту енд
Ретесттинг
Нью фича тест

По уровню важности?	
Виды?
модульное
интеграцтонное

Не функциональные:
УСТАНОВКИ
Локализация
Интернационализация
Кроссбраузерное
Отказ востановления (если сервак упал, но он делал бэкап чтобы сохраниться и восстановиться на том же месте)
Маштабируемости
Нагрузки
Безопасности
Стресса

Виды тестирования связанные с изменениями?
Смоук
Критический путь
Регрессия – 
Енд ту енд
Ретесттинг
Нью фича тест

Уровни тестирования? 
Компонентное/ юнит, 
интеграционное, 
системное,
приемочное

Перечислите виды и типы тестирования?

Тесты связанные с изменениями?
Ретестинг
Регрессия - старое
Санитарное – смежные функции
Смоук  - по позитивному сценарию




Обходные пути блокера? Зайти с другого устройства,
Входные параметры по работе с смоук сценария? Характер - позитивные (те прогоны на которые програма хнает ответы, система знает, что делать)






МОБИЛЬНОЕ ТЕСТИРОВАНИЕ:
Кейс установки мобильного приложения?
Чему дллжно соответствовать моб приложение перед релизом? Проверить лигал по безопасности? гайдлайны.
разные оес, пуши, пририывание, обновы, фейс айди, поворот экрана
подтвержение смс транзакции - автоматическая, предоставить доступ присылать сообщения, сенсоры, фотик, блокирование экрана.
Горизонтальная и вертикальное расположение? если не проверить, чем это черевато?
Что происходит когда меняеться? перерисовыеться графика, страрый экран в новом расположении.
Каждая последующая кнопка, все экраны удаляються, и прорисовка экранов поновой.
Скан карточки через фотик и возможность пересылать денюжку .
*Пуши - способы через что они могут быть доставлены - сервисы пушей офлайн, и бэкенд не может достучаться, и когда онлайн - напрямую пуш идентификацию;


ТЕСТИРОВАНИЕ ВЕРСТКИ:
Верстка - процес создания страниц; Дизайниер создает картинку, верстальщик фронтенд дев - верстает сайт, тестировщик проверяет на валидность всех требований.
чеклист верстки: соответсвие макету 1:1 - тул Перфект Пиксел
кроссбраузерность - 
Мобильные устройства - через дев тулы
Валидность кода - проверка разметки WЗС
Скорость загрузки - быстрый интернет делает мир дыстрее
независимость блоков ССС - каскадность, если НТМЛ - это скилет, ССС - это мускулы.
Структура каталогов в верстке - Джава скрипт, НТМЛ, ССС.
а/b тесты




СОЦИАЛЬНЫЕ ЛОГИНЫ:
через гугл, соц степени, через яблоко
Факторы Аутенфикация? ЭТО аут 2.0 - когда мы доверяем свою регистрацию на доверенное приложение оно редиректид на соц сети.



Кейс: есть несколько пейволов/кошельков: какие варики оплаты нашего сервиса какие не надо тестировать? 
все надо проверить оплаты, мир разнообразен, и никогда не предугадаешь
Какие кейсы оплаты: проверки платного контента на мобилку? Будут ли отображаться тот наработанный/накопленный опыт из бесплатной версии в платной...,
откат, пересчёт, если подписка закончилась? если на карте нет денег, прийдет оповещение, надо проверить трекнуть и ему вернёться ему всё то, что было до оплаты.
Кейсы оплат: через яблоко вернкться платный контент,  у андроид - нет.
*нельзя пользоваться попарно? потому что надо всё проверить.
на ютуб если что тм пишет - поменяйте способ оплаты.

Кейс Тест на плптёжную систему:  карта с маской (виза и мастер карты), какую карту мы скинем, не верный код? если выбрали визу, но начали? по сроку не валичное время:
будущее, формат даты, что за чем? дроб даун? экспандиться или нет? Спецсимволы? пробелы? Колёсико? сиви код? чего-то не нажали? код с мобилки прислали подтверждение?
Есть контактные данные саппорта.


СТОРИДЖЫ:
Кукис сторидж - 
Кеш сторидж -
Локал сторидж - 
Кейс: Добавили товары в корзинку, закрыли, а они подтянулись в другой раз? По токену и 
локальный сторидж сохраниться.
Кейс: дать надо челлику корзину, когда он обновил браузер, и надо ему даь его корзинку с товаром? 
Через логин, а корзина сохраниться на серваке в базе. Почему они так делают? по протоколу Нттп спроить/трекнуть историю браузера.




Зачем нужен POSTMAN?
Там есть раннер - чтобы автоматически гонять раны
Зачем окружение в Постмане?
чтобы создать набор переменных, которым можно присвоить значение и использовать при работе
и ещё запросы могут передавать данные в окружение и другие запросы эти данные будут использовать
*ну вообще смысл в том чтобы тесты писать универсальными, 
и если тебе что-то изменить, то ты меняешь в окружении, а не в каждом запросе отдельно.




SQL:
по убыванию
по возростанию? без ар
Как вывести людей от 1000 до 2000: селект фром где одна Таблица
как вывести людей котрые живут в Москве и в Питере: селект через ОР (или)
вывести всех сотрудниц у которых зп от 1000 до 2000, которые попали в контору после 5 декабря 2020 года:
слект*фром емплаис салери 1000-2000 вере гендер=Ж, вере сити москов ор питер.
Про джоины: иннер, лефт джоин, райт джоин, фулл
Джоин - горизонтально
Иннер -
Лефт - 
Райт - 
фуулл-
Юнионом - как соеденить? вертикально соединяет, одинаковые столбики!
Кросс джоин (юнион) - перемножает все данные., селект*фром 1,2;
Как кампуктер поймёт где левая и где правая? 
что должно быть одинаковым? 
Релляция? это взаимоотношения по ключам (праймари и форен), зачем нужна релиция? что дают реляции между табличками? 
чтобы была взаимосвязь
Мы при релиции обращаемся к родительской папке, если такой ойти есть, то он даст положительный ответ, если нет, то ответа не будет. И 
лишняя информация не пройдёт.
Тип данных должен быть чтобы их сматчить.
например: если у нас есть такой емейл есть в бд, то такой челлик зайдет в базу (регистрация), а если нету, 
то регистрация не пройдет, потому что нет.
Как обьеденить два запроса без джоина? 
Каскадирование? 
Гроуп бай? за ним идет Хевинг.


КЛИЕНТ СЕРВЕРНАЯ АРХИТЕКТУРА:
из чего состоит клиент?
веб сокеды?
Аякс? 
Идентификация
Аутенфикация
Авторизация
Протоколы ТСP и UDP?	
ТСP – надёжный транспортный протокол с ответом
UDP - 


МЕТОДЫ HTTP?:
Ген - получение /clietn/23
Пут - обновление, изменение
Пост - создагие
Делит - удалить
ХЕД - 
Какие иденпатентный -  Гет
Можем зарегать пользователя через Гет? можно, написаь в урл, но это будет не безопастно.
а постом спросить могу не создавая? да.
HTTS - шифрованое протоколом TLS.




APLICATION PROGRAM INTERFACE:
Что такое API? 
Это програмный интерфейс, который позволяет взаимодействовать приложениям без влияния пользователя.
Зачем нужен АПИ? ПИ для того чтобы проги были надёжнее, отдельные компоненты, натсройка связали
между програмами.(авиасейлс - сайт агрегатор, календарь, погода, кнопка авторизации)
Иногда через апи зарабатывают (погода)
Веб-сервисы - прога котрая организовывает взаимодействие: интеграция процессов без участия людей.
Разница между веб сервисом АПИ и АПИ.
Рест - Репресентейшн стейт трансфер - это архитектурный стиль, определяет как компоненты должны между собой взаимодействовать,
по запосу и ответу.
URI? Ресурс это ключевая абстрация некой сущности (клиенты, заказы клиентов, товары)
Эндпоинт URI - конечная точка, последовательность символов.
АПИ состоит из ендпоинтов - (точки касания) у каждой точки касания есть свой урл.
/client
/client23 - какой клиент
/clietn/4/orders - клиент
принципи РЕСТ: 
1. клиент-сервер: отделяем клиентский сервер от пользовательского.
4. единобразие иньерфейса
5. Слои (одни компоненты не видят другие)
6.Код по требованию.
JSON:
всё в кавычках
только текст
велью может быть без кавычек - 
другую джейсоночку могу ввести в другую
могу ли я? в качесве велью вставить хмл, делаю кавычки.
хмл может быть ключём в джейсоне ( в кавычка)
В чём можно ещё создать ключ? - только стринг, когда они переформатируються;
Схема json - ключ=значение.
джейсон от хмл отличаеться? хмл - теговая, может быть с открытой тегой, закрытая, джейсон - 
аштмл - язык разметки ОТ хмл - у хмл - расширяемый формат данных 
Aplication program interface – как между собой общаются клиенты сервера с другим сервером = через протокол нттп.
сервера черзе интернет - по нттпс
если програма - апи по нттп
если спецсерверы - там свои протоколы;
АПИ - это не обязательный атрибут, если нет общения.
Как тестировать API? 
через Постман и Сваггер (покажет описание апи). Сравнивать ответы по чек-листам.
Статус код проверить
Сравнить запрос/ответ
из массива достать элемент
Схема json - ключ=значение.
Запросы я отправляю в ендпоинт (регисирация, отправка, ссылка), а сервер отвечает реквестами.
Из чего состоит АПИ: протокол, адрес из ендпоинтов
Специфический кейсы: для всех веб сервисов, хмл или джейсон, = изменение формата данных. Типы данных для джейсона: булевный, стринговый





Хедеры реквеста? тайп, сервер, окружение, метод, 
что в хедере юзер агент?

DEVTOOLS:
В какой вкладке Девтула посмотреть трафик веб-проэкта?
в Нетворке? там НТТР запросы
*В Мозиле можно перехватить трафик и подменить.
Адаптивный - если резко то адаптив., выбрать настроить разрешения экрана.
Респонсивный - двигать экран, если плавно то респонс.
Работа с разными скоростями интернета (2дж,3жд, отключить интернет)
Где изменить GPS? вкладка 
Хедеры где смотреть? Заголовки в укладки нетворк
Куки где смотреть? Апликатион, сторедж, локал и сейшнс сторидж - они дают 
кеш от куки отличаються: Куки - юзерские насттройки, кеш - серверные. на жёсткий диск и тот и то временные файлы. 
в консоле? 
в нетворк? логи
Мобайл респонсив, надо проверить версию на мобилке и на десктопе? какое окружение, в каких версиях будет работать? 
что популярно у юзеров моего приложения?

ПРОКСИ И ВПН:
Как взять и сделать чтобы мой браузер слал трафик не на прямую, а через прокси? ВПН браузерный 
(только то, что открыл, будет тянуть трафик)  и стацтонарный (весь трафик через комп, месенжеры)
Механика Прокси сервера? Изменить айри Промежуток между Клинтом и сервером; 
Клиен попадает на прокси, а проски отправляет через свои каналы на сервер; 
и таким образом мы обходим обойти и проверить локализацию.
КЕЙС: Если баг на фронте, то возьму логи из консольки, тким образом: логи и сейв файлс.
Как посмотреть что улетело на бэк? боди реквест надо увидеть в вкладке ""
Как в Сафари включить Девтулы?
прокси это часть впн:
ВПН - виртуал прайват нетворк.
Суть ВПН? зашифрованые данные, ставим локал германию, а он отправляет на сайт отвечает на сервер, 
сервер зашифровал и вернул тебе.
Прокси может существовать без ВПН, ничего не шифрует.
Если надо получить какой-то сайт можно, но этот запрос не будет шифрован.


CONTENT DELIVERY NETWORK:




ГАЙДЛАЙНЫ:
У Апл безопастность, не пустят на апп-стор.
Эплов судили, что они они вкрутили только стои системы оплаты, а не все. 
И теперь они запрашивают сертификацию, чтобы платёжные системы заходили.
 



SCRUM:
Чем заканчиваеться Скрам? Новым билдом/, который можно показать, который можно показать (отладка того, что не работало).





GIT BASH: 
Сисиема ослеживания версий.
pwd                 - посмотреть, где я
ls -la              - показатьсписок содержимого в папке
mkdir               - создать папку
cp                  - скопировать от куда? что? / куда? что?
cd                  - открыть папку
сd ./               - зайти в родительскую директорию
сd ..               - родительская папочка
mv                  - перемещение /откуда и куда/            
grep                - в реальном времени
head                - голова
tail                - хвост
date                - дата и время
less                - просмотреть содержимое длинного файла
git clone           - скопируем свой репозирорий на локальный компуктер
git add             - добавить файл для отслеживания
touch f_1.txt       - создать файл     
git status          - показать состояние проекта, чекать что отслеживаеться, а что нет.
git add             - добавить файл для отслеживания, трекнуть изменения
git add .           - отслеживать ВСЕ файлы, которые не отслеживали ранее
git commit          - команда для записи изменений в репозиторий Git
git commit -m       - команда для записи индексированных изменений в репозиторий Git "сообщение"
git push            - отправить изменения на внешний репозиторий
vim f_1.txt         - редактировать
git commit -am      - команда для записи изменений в одну строчку (отслеживание и сообщение)
git fetch           - проверяет есть ли изменения на ВНЕШНЕГО репозитории
git pull            - используется для извлечения из ВНЕШНЕГО репозитория, если аишет олреди ар тудей, то всё сочитаеться.



Чем Линукс отличаеться от Виндовс? 
Чем Андроид отличаеться от Яблоко?  
андроид - нельзя откотить, количество процессоров, открыта и закрыта ОС;
Аёса - можно откотить,




Кейс: не сработала кнопка «расплатиться»
Во первых, узнаю есть ли у клиента интернет.
Перзагрузить комп
Перейдите в другой браузер
Какой товар покупаете?
Может нет авторизации?
Пойти к бэкенду попросить логии и узнать, что делал этот клиент на магазине.
Воиспроводить у себя на кампуктере.
Баг-репорт завести
Заасайнила на разработчика.
Попросить саппорт, чтобы они связались с клиентом и проследить получилось ли у клиента.
Почистить кеш и куки.

Кейс: если ты один тестировщик на проэкте?
1. исследовать ad-hoc.
2. Смоук
3. Критикал пас
4. Анд-то-енд
5. Регрессия
6. Написать чек-листы  по: смоук, критикал пас, анд-то-енд, по регрессии.

Кейс: форма, 4 поля регистрации, и одна кнопка зарегаться, в БД заходит только 3 поля!
узнать что за форма? спросить обязательно ли оно.
Зашла в Девтулс сомотрю как там отрабатываеться.
1. Валидация на фронте и бэке различная, на фронте ок, на бэке не ок.
возможно на фронте не прописано, что это поле обязательно;
2. Метод не тот.
3. Зайти в Чарлик
4. Пойти к фронтенду - проверить , возможно не прописано АПИ, узнать требования - может она там не нужна.
Что формируеться на фронте перед тем как отправиться - джейсоночка запрос-формируеться и должна полететь на бекэнд, 
но в этой джейсоночке ошибочка (там есть дава параметра, куда ложить и что ложить, КЕЙ и ВЕЛЬЮ)
 (велью дата, массив)
 5. Проблема в ВЕЛЬЮ - там пустое значение; ключ есть, а велью пустое.
 6. На этапе отправки джейсоночки (АПИ) - если Постом ок, если Гетом - нету. Ендпойнты АПИ - точки входа, УРЛы, куда шлют запросы. Бэк написали новый эндпойнт 4 поля, а фронт - 
 шлют запрос, где обрабатываються 3. Надо обновить фронт.
 7. На бэке забыли допичать, чтобы кидало с 4 строчки: посылаеться с фронта но на бэке не обрабатываеться.
 8. спарсили на бэке, но на фронте не отображаеться.
 9. С БД на бэке, как писать запросы? СКЛ - ИНСЕРТ что-то там и полетело в БД. Через ORM? не прямо, а фреймворк. 


Кейс: Два значения улетает в одно поле, нейм и ласт нейм.

Кейс: протестируйте домофон.
есть дислей? видео или обычный? обычный
на индикации? трубка? с биометрикой? да, ключ какой: просто код, по биометрии (сетчатка глаза, палец).
Кейс со сброосм
флоу 1: подошли к домофону, ввели код он открылся
флоу 2: сброс параметров, не ту квартиру
флоу 3: магнитной карточкой
4. эквивалентное разбиение
5. граничные значения, ноль и что будет, со *,
А если зажать кнопку, будут ли вводиться цифры?
а если в очках?
1-97,Введи код, нажми В, не дожидаясь поднятия трубки, приложи чип и т.д.


Кейс: тестируем мусорный бак с ножкой.
ресурс ножки, обьём, материал, гарантия, в каких условиях будет использовать? стресс тестирование - котами, детьми, кто-то зацепил, стеклянная
уборщица; мусорка герметичная или нет? из какого материала она сделана?


405 код как создать по клиенту? - вызвать неподдерживаемый код, через Постман, Чпрльз Реврайл



Важно*
Если на собесе спрашивают теорию и стоит на своём, то говорить «Если вы хотите так, то так и будем думать»
Если сказала, то опираться на источник*
Говорить теорию и сразу практику
*интернационализация – говорить, что делала на практике
*нагрузочное  - включали нагрузочное и погнали
Докажи разработчику, что это не баг – дать пример;
Произвести впечатление.
Расположить к себе на собесе людей: понравиться как человек, как нейросеть обучается общаться с людьми в различных эмоциональных состояниях. 
Есть люди: с которыми никак, есть человек ок, люди, которые нервируют и я ищу слова как выжатый лимон, люди, с которыми мы встретились и мне в кайф,
 шутки сами по себе, волна для разговора. Насколько ты адаптивный человек, это тренируется через подходы к человеку. Книга – «Теория юмора», *что-то съюморить. 
Сменить тему в стрессе сложно. А чтобы не было стресса, надо чаще быть в этом состоянии.
*знать какой новый функционал выкатыват андроид и Эплы.
*баз фактор - кто-то ушёл и все не знают что делать? 
*Почему люк круглый? чтобы человек пролез.
*Какие последние новости на Сафари?


Dbevear - работа с селектом, когда выборка, по номеру, айди;
Свагер - нет лоудера, когда не проходит апи колл
Редис - 
UI Kit - чтобы было UI Kit - елементы интерфейса, хлебные крошки (это со сказки Грета и кто-то, они кидали хлебные крошки, чтобы вернуться домой), 
стандартизация, огромный сайт, чтобы был едиый стить.

Figma - Дизайн Система - это такой гайдлайны
Asset Management 
Фидлер - 
>>>>>>> ae048931711f9ef453a8f15bc63d055f760b5ecb
